services:
  # main:
  main:
    hostname: main
    build:
      context: "./apps/servers/main/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/main/.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/servers/main:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - 8000:8000
    networks:
      - binomia-network

  # notifications:
  notifications:
    build:
      context: "./apps//servers/notifications/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/notifications/.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/servers/notifications:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - 8001:8001
    networks:
      - binomia-network

  # queues:
  queues:
    build:
      context: "./apps/servers/queues/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/queues/.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/servers/queues:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - 8002:8002
    networks:
      - binomia-network

  # anomalies:
  anomalies:
    build:
      context: "./apps/servers/anomalies/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/anomalies/.env"
    volumes:
      - ./apps/servers/anomalies:/app
    command: python3 main.py
    ports:
      - 8003:8003
    networks:
      - binomia-network

  # grafana:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000" # Grafana UI
    volumes:
      - ./utils/grafana/data:/var/lib/grafana
    networks:
      - binomia-network
    depends_on:
      - prometheus

  # jaeger:
  jaeger:
    image: jaegertracing/jaeger:2.7.0
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "4318:4318" # OTLP/HTTP (for Expo EAS)
      - "4317:4317"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - binomia-network
    restart: always

  # postgres:
  postgres:
    image: postgres:alpine
    ports:
      - 5432:5432
    volumes:
      - ./utils/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    networks:
      - binomia-network

  # prometheus:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./utils/manifests/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d # Retention time for local Prometheus data
    ports:
      - "9090:9090" # Prometheus UI
    networks:
      - binomia-network

  # redis:
  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - binomia-network

networks:
  binomia-network:
    driver: bridge

volumes:
  tempo-data:
    driver: local
  grafana-data:
    driver: local
