services:
  # main:
  main:
    hostname: main
    build:
      context: "./apps/servers/main/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/main/.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/servers/main:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - 8000:8000
    networks:
      - binomia-network

  # notifications:
  notifications:
    build:
      context: "./apps/servers/notifications/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/notifications/.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/servers/notifications:/app
      - /app/node_modules
    command: npm run dev
    ports:
      - 8001:8001
      - 7001:7001
    networks:
      - binomia-network

  # queues:
  queues:
    build:
      context: "./apps/servers/queues/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/queues/.env"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./apps/servers/queues:/app
      - ./apps/servers/queues/src/certs:/app/certs:ro
      - /app/node_modules
    command: npm run dev
    ports:
      - 8002:8002
      - 7002:7002

    networks:
      - binomia-network

  # # anomalies:
  # anomalies:
  #   build:
  #     context: "./apps/servers/anomalies/"
  #     dockerfile: Dockerfile
  #   env_file: "./apps/servers/anomalies/.env"
  #   volumes:
  #     - ./apps/servers/anomalies:/app
  #   command: python3 main.py
  #   ports:
  #     - 8003:8003
  #     - 7003:7003
  #   networks:
  #     - binomia-network

  # anomaly:
  anomaly:
    build:
      context: "./apps/servers/anomaly/"
      dockerfile: Dockerfile
    env_file: "./apps/servers/anomaly/.env"
    volumes:
      - ./apps/servers/anomaly:/app
    command: npx ts-node index.ts
    ports:
      - 8003:8003
      - 7003:7003

    networks:
      - binomia-network

  # jaeger:
  jaeger:
    image: jaegertracing/jaeger:2.7.0
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "4318:4318" # OTLP/HTTP (for Expo EAS)
      - "4317:4317"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - binomia-network
    restart: always

  # postgres:
  postgres:
    image: postgres:alpine
    ports:
      - 5432:5432
    volumes:
      - ./utils/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    restart: unless-stopped
    networks:
      - binomia-network

  # redis:
  redis:
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - binomia-network

  # alloy
  alloy:
    image: grafana/alloy:latest
    volumes:
      - ./utils/grafana/config.alloy:/etc/alloy/config.alloy
    command: ["run", "/etc/alloy/config.alloy"]
    networks:
      - binomia-network

networks:
  binomia-network:
    driver: bridge

volumes:
  tempo-data:
    driver: local
  grafana-data:
    driver: local
